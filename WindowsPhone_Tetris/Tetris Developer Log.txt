Tetris Log

Seminar 3
-Created base image for Tetromino segments
-Drafted and implemented Tetromino rotations
-Created TetrominoFactory and Tetromino classes
-Created base test area in Game1 class to check rotations
-Created Field class and added LineClears, Insertion, and initial Draw Field method

-Created ScreenManager, GameScreen classes for intents of adding options screen later
-Created GameplayScreen class and moved tetromino logic there as well as Field
-Created initial Gameplay States: Initialize Tetromino, Tetromino Falling, Line Clearing, and Game Over
-Added logic to drop tetromino, but line clears and movement are still not implemented

Seminar 4
-Reshaped image for color tinting. Intend to get production images in Seminar 5
-Added primitive arrow buttons to test Tetris movement. These are bad, I know.
-Added the movement logic and added a function to take care of it from any direction
-Added the drop tetromino logic
-Added additional draw methods in Field to reuse Tetromino drawing code within the field

-Added additional gameplay states: Lock Down and Paused
-Implemented line clears
-Implemented Ghost Piece, reuses code to find the drop position as if user dropped the tetromino
-Added draw overloaded method in field to draw ghost piece
-Implemented delay factor and Lock Down state

-Added Level line requirements and added logic to level up
-Added additional lines per Tetris clear. Once T-Spin checks are rotated we can add this
-Modifying all rotation Matrices to match the Super Rotation System matrix for proper rotation
-Disabled wall push rotation and instead prevented rotation for now
-Added Score componenet to Gameplay Screen

-Added score component. If a drop command is used, it tallies a score by the number of rows dropped. Score is also determined by a formula of the number of lines cleared * (level + 1), so higher levels give higher scores
-Added basic courier new font for now to draw the games information, level, lines to clear, and score


Seminar 5
-Added the level speeds. After playing around with them a little it was decided to use 1200 and subtract 100 until 100 is left, and then divide by 2 leaving level 15 with a speed of 10
-Delay is correct. There was no need for modifications as previously thought.
-Added the wall rotation data from its different states and added an enum to track these in a dictionary
-Finished modifying the rotation matrices to be in line with the SRS basic rotation scheme

-Added logic to the tetromino to account for its rotation orientation state
-Added logic to retrieve the current tetromino wall kick orientation
-In the gameplay screen on orientation, it will now check if the base rotation is possible. If it is, it will iterate the wall kick translations to find a solution. If it never does, then it simply doesn't rotate. If it does, the cursor position is translated to the new position, and the piece is rotated.

-Added graphics for the tetris field, score, level, etc.
-Added new controls, but I'm not completely happy with them








To Do
	-Main Menu/Options Screen
	-Audio provider
	-Recalculate scoring
	-Winning Screen?
	-Tetris Icon

